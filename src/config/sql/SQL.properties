updateSubscription=update subscription set NAME = :fullName, ADDRESS_LINE1 = :addressLine1, ADDRESS_LINE2 = :addressLine2, ADDRESS_LINE3 = :addressLine3, CITY = :city, STATE = :state, PINCODE = :pincode, SUB_DATE = :subDate, SUB_END_DATE = :subEndDate, LAST_UPDATE_DATE = datetime('now') where SUB_ID = :subscriptionId;
allSubscriptions=select sub.SUB_ID, NAME, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, PINCODE, SUB_DATE, SUB_END_DATE, CASE WHEN special.SUB_ID is null then 'N' else 'Y' END AS 'IS_SPECIAL' from subscription sub LEFT JOIN SPECIAL_SUBSCRIPTION special ON sub.SUB_ID = special.SUB_ID WHERE sub.SUB_ID = ifnull(:subscriptionId, sub.SUB_ID) and CITY LIKE :city and STATE LIKE :state and PINCODE = ifnull(:pincode, PINCODE) and SUB_END_DATE between ifnull(:fromDate, SUB_END_DATE) AND ifnull(:toDate, SUB_END_DATE) ORDER BY pincode asc;
deepjyotSubscriptions=select sub.SUB_ID, NAME, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, PINCODE, SUB_DATE, SUB_END_DATE, CASE WHEN special.SUB_ID is null then 'N' else 'Y' END AS 'IS_SPECIAL' from subscription sub LEFT JOIN SPECIAL_SUBSCRIPTION special ON sub.SUB_ID = special.SUB_ID WHERE sub.SUB_ID = ifnull(:subscriptionId, sub.SUB_ID) and CITY LIKE :city and STATE LIKE :state and PINCODE = ifnull(:pincode, PINCODE) and SUB_END_DATE between ifnull(:fromDate, SUB_END_DATE) AND ifnull(:toDate, SUB_END_DATE) AND SUB_END_DATE > date('now') ORDER BY pincode asc;
specialSubscriptions=select sub.SUB_ID, NAME, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, PINCODE, SUB_DATE, SUB_END_DATE, CASE WHEN special.SUB_ID is null then 'N' else 'Y' END AS 'IS_SPECIAL' from subscription sub INNER JOIN SPECIAL_SUBSCRIPTION special ON sub.SUB_ID = special.SUB_ID WHERE sub.SUB_ID = ifnull(:subscriptionId, sub.SUB_ID) and CITY LIKE :city and STATE LIKE :state and PINCODE = ifnull(:pincode, PINCODE) and SUB_END_DATE between ifnull(:fromDate, SUB_END_DATE) AND ifnull(:toDate, SUB_END_DATE) AND SUB_END_DATE > date('now') ORDER BY pincode asc;
subscriptionDetails=select sub.SUB_ID, NAME, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, PINCODE, SUB_DATE, SUB_END_DATE, CASE WHEN special.SUB_ID is null then 'N' else 'Y' END AS 'IS_SPECIAL' from subscription sub LEFT JOIN SPECIAL_SUBSCRIPTION special ON sub.SUB_ID = special.SUB_ID WHERE sub.SUB_ID = :subscriptionId;
generateSubscriptionNumber=select max(SUB_ID) + 1 as "newSubscriptionId" from subscription; 
createSubscription=INSERT INTO SUBSCRIPTION (SUB_ID, NAME, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, PINCODE, SUB_DATE, TENURE, SUB_END_DATE, CREATION_DATE, LAST_UPDATE_DATE) values (:subscriptionId, :fullName, :addressLine1, :addressLine2, :addressLine3, :city, :state, :pincode, :subDate, :tenure, :subEndDate, datetime('now'), datetime('now'));
extendSubscription=update subscription set SUB_END_DATE = :subEndDate, TENURE = :tenure, LAST_UPDATE_DATE = datetime('now')  where SUB_ID = :subscriptionId;
insertAuditSubscription=INSERT INTO SUBSCRIPTION_AUDIT (SUB_ID, NAME, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, PINCODE, SUB_DATE, TENURE, SUB_END_DATE, CREATION_DATE, LAST_UPDATE_DATE) select SUB_ID, NAME, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, STATE, PINCODE, SUB_DATE, TENURE, SUB_END_DATE, CREATION_DATE, LAST_UPDATE_DATE from subscription where SUB_ID = :subscriptionId;
